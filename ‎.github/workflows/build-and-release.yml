name: Build and Release WENDy R package

on:
  push:
    tags:
      - 'v*'         
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            cmake g++ libeigen3-dev libfftw3-dev libsymengine-dev \
            libflint-dev libgmp-dev libmpfr-dev libfmt-dev \
            coinor-libipopt-dev pkg-config libopenblas-dev liblapack-dev
          # Ceres is not in Ubuntu repos, so build from source:
          sudo apt-get install -y libgoogle-glog-dev libgflags-dev
          git clone https://github.com/ceres-solver/ceres-solver.git
          cd ceres-solver
          mkdir build && cd build
          cmake .. -DBUILD_TESTING=OFF
          make -j2
          sudo make install
          cd ../..
          rm -rf ceres-solver

      - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install cmake eigen ceres-solver fftw symengine flint gmp mpfr fmt ipopt pkg-config

      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      - name: Install R package dependencies
        run: |
          Rscript -e 'install.packages(c("Rcpp", "RcppEigen", "devtools"))'

      - name: Build core C++ library
        run: |
          cd src/core
          mkdir -p build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release \
                -DEigen3_DIR=$(Rscript -e 'cat(system("Rscript -e \"cat(system.file(package = \\\"RcppEigen\\\"))\"", intern = TRUE))') \
                ..
          cmake --build . --target wendy
          cd ../../../

      - name: Generate Rcpp attributes
        run: Rscript -e "Rcpp::compileAttributes('.')"

      - name: Build R package
        run: R CMD build .

      - name: Upload R package tarball
        uses: actions/upload-artifact@v4
        with:
          name: wendy-tarball-${{ runner.os }}
          path: wendy_*.tar.gz

      - name: Save tarball path for release
        id: tarball
        run: echo "TARBALL_PATH=$(ls wendy_*.tar.gz)" >> $GITHUB_ENV

  release:
    name: Attach tarballs to GitHub Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List artifacts
        run: ls -lhR artifacts

      - name: Create release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/wendy-tarball-ubuntu-latest/wendy_*.tar.gz
            artifacts/wendy-tarball-macos-latest/wendy_*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
